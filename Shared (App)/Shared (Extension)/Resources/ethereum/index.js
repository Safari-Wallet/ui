(()=>{const e=e=>async(t,n,s={})=>{const o={method:t,params:s};e(`Sending message to SafariWebExtensionHandler: ${JSON.stringify(o)}`);const r=await browser.runtime.sendNativeMessage("ignored",o);if(e(`Result from message: ${JSON.stringify(r)}`),r.error)throw new Error(`Received error from SafariWebExtensionHandler: ${JSON.stringify(r)}`);return r},t=(e,t)=>(n,s,o={})=>{const r={destination:n,method:s,params:o,sessionId:t};return e(`Sending message to browser runtime: ${JSON.stringify(r)}`),browser.runtime.sendMessage(r)},n=(e,t)=>(n,s,o={})=>{const r={destination:n,method:s,params:o,sessionId:t};e(`Sending message to browser tabs: ${JSON.stringify(r)}`),browser.tabs.query({active:!0,currentWindow:!0},(e=>{const[t]=e;t&&t.id&&browser.tabs.sendMessage(t.id,r)}))},s=(e,t)=>(n,s={})=>{const o={method:n,params:s};return e(`Sending message to Ethereum.js: ${JSON.stringify(o)}`),t(o)},o=e=>(e,t,n={})=>window.postMessage({destination:e,method:t,params:n}),r=({logger:o})=>{const r=({method:e,params:t})=>n(o)("content",e,t),i=s(o,(e=>r({method:"forwardToEthereumJs",params:e})));return{sendToContent:r,sendToEthereumJs:i,sendToPopup:(e,n={})=>t(o)("popup",e,n),sendToNative:e(o)}},i=({logger:o})=>{const r=({method:e,params:t})=>n(o)("content",e,t),i=s(o,(e=>r({method:"forwardToEthereumJs",params:e})));return{sendToContent:r,sendToEthereumJs:i,sendToBackground:(e,n={})=>t(o)("background",e,n),sendToNative:e(o)}},a=({logger:e,sessionId:n})=>({sendToPopup:({method:s,params:o})=>t(e,n)("popup",s,o),sendToEthereumJs:({method:e,params:t})=>o()("ethereum",e,t),sendToBackground:(s,o={})=>t(e,n)("background",s,o)}),d=({logger:e})=>({sendToContent:({method:e,params:t})=>o()("content",e,t)}),m=(h="ethereum",(e,...t)=>{const n=new XMLHttpRequest;n.onload=e=>{},n.open("POST",`http://localhost:8081/add?message=${e}&sender=${h}.js`,!0),n.send()});var h;const{sendToContent:c}=((e,t)=>{if("background"===e)return r(t);if("popup"===e)return i(t);if("content"===e)return a(t);if("ethereum"===e)return d(t);throw new Error(`Unknown origin: ${e}`)})("ethereum",{logger:m}),l={backgroundColor:"#000",height:"100vh",left:"0",opacity:"0",position:"fixed",top:"0",transition:"opacity .2",width:"100vw",willChange:"opacity",zIndex:"9999999"};class u{constructor(){this.waitingFor={},this.opened=!1,this.overlay=document.createElement("div"),Object.assign(this.overlay.style,l),this.overlay.onclick=()=>this.close();const e={alignItems:"center",backgroundColor:"#fff",borderRadius:"8px 8px 0 0",bottom:"0",columnGap:"18px",display:"flex",fontSize:"18px",height:"45px",justifyContent:"center",left:"calc(calc(100vw - 368px) / 2)",position:"fixed",transform:"translateY(100%)",transition:"transform .3s",width:"368px",willChange:"transform",zIndex:"10000000"};this.div=document.createElement("div"),this.div.innerHTML='\n        <svg width="22px" height="16px" viewBox="0 0 22 16" fill="none">\n            <path fill-rule="evenodd" clip-rule="evenodd" d="M0 1.33333C0 0.597005 0.616262 0 1.37634 0H15.1398C15.8998 0 16.5161 0.597005 16.5161 1.33333V6.23633C17.0205 5.68262 17.7583 5.33333 18.5806 5.33333C20.1008 5.33333 21.3333 6.52734 21.3333 8C21.3333 9.47266 20.1008 10.6667 18.5806 10.6667C17.7583 10.6667 17.0205 10.3174 16.5161 9.76367V14.6667C16.5161 15.403 15.8998 16 15.1398 16H1.37634C0.616262 16 0 15.403 0 14.6667V10.2445C0 9.33333 1.61089 9.26921 2.07089 9.77083C2.57526 10.3203 3.31048 10.6667 4.12903 10.6667C5.64919 10.6667 6.88171 9.47266 6.88171 8C6.88171 6.52734 5.64919 5.33333 4.12903 5.33333C3.31048 5.33333 2.57526 5.67969 2.07089 6.22917C1.61089 6.73079 0 6.66667 0 5.75553V1.33333Z" fill="#3478f6" />\n        </svg>\n    ',Object.assign(this.div.style,e),this.message=document.createElement("p"),this.message.innerText="Open the wallet extension to connect",this.div.appendChild(this.message),window.addEventListener("message",(e=>{const{method:t,params:n,destination:s}=e.data;if("ethereum"!==s)return;const o=this.waitingFor[t];if(o){switch(t){case"walletConnected":o([n.address]),window.ethereum.close();break;case"sign":o(n.signature)}delete this.waitingFor[t]}}))}close(){window.postMessage("cancel"),this.overlay.style.opacity="0",this.div.style.transform="translateY(100%)",this.overlay.remove(),this.div.remove(),this.opened=!1}isConnected(){}on(e,t){}request(e){return new Promise(((t,n)=>{m("Request",e);switch(e.method){case"eth_requestAccounts":s="Open the wallet extension to connect",!1===window.ethereum.opened&&(window.ethereum.opened=!0,window.ethereum.message.textContent=s,document.body.insertBefore(window.ethereum.overlay,document.body.firstChild),document.body.insertBefore(window.ethereum.div,document.body.firstChild),setTimeout((()=>{window.ethereum.overlay.style.opacity=.4,window.ethereum.div.style.transform="translateY(0)"}),1)),this.waitingFor.walletConnected=t;break;case"eth_sign":case"personal_sign":case"eth_signTypedData_v3":case"eth_signTypedData_v4":c({method:"sign",params:{method:e.method,address:e.params[0],data:e.params[1]}}),this.waitingFor.sign=t;break;default:m("Invalid or unimplemented method",e.method),t(!1)}var s}))}}window.browser||(window.ethereum=new u,m("loaded"))})();
//# sourceMappingURL=index.js.map
